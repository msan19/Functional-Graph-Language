
export graphFunc(2) { "TheodorGraph2" }

graphFunc: (integer)->graph
graphFunc(n) = (vertexSet(n), edgeSet(n), src, dst)

vertexSet: (integer)->set
vertexSet(n) = {
    x[i, j] | 0 < [i] <= n, 
             0 <= [j] < 2 ^ (n + 1), 
             j < 2 ^ (i + 1)}

edgeSet: (integer)->set
edgeSet(n) = {
    x[i, j, k] | 0 < [i] <= n, 
             0 <= [j] < 2 ^ (n + 1), 
             0 <= [k] <= 1, 
             j < 2 ^ (i + 1) and i <= n - k}

src: (element)->element
src(e) =
       | e[i, j, k] = element[i, j]


dst: (element)->element
dst(e) =
     | e[i, j, k], k == 0 = element[i, (j + 1) mod 2 ^ (i + 1)]
         | e[i, j, k], k == 1 = element[i + 1, (j * 2) mod 2 ^ (i + 2)]